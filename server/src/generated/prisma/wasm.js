
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  username: 'username',
  passwordHash: 'passwordHash',
  role: 'role',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StudentScalarFieldEnum = {
  id: 'id',
  nim: 'nim',
  noHp: 'noHp',
  nama: 'nama',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SessionWindowScalarFieldEnum = {
  id: 'id',
  sesi: 'sesi',
  jenis: 'jenis',
  startAt: 'startAt',
  endAt: 'endAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EnrollmentScalarFieldEnum = {
  id: 'id',
  studentId: 'studentId',
  courseId: 'courseId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TutonItemScalarFieldEnum = {
  id: 'id',
  enrollmentId: 'enrollmentId',
  jenis: 'jenis',
  sesi: 'sesi',
  status: 'status',
  nilai: 'nilai',
  deskripsi: 'deskripsi',
  openAt: 'openAt',
  deadlineAt: 'deadlineAt',
  selesaiAt: 'selesaiAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReminderScalarFieldEnum = {
  id: 'id',
  itemId: 'itemId',
  source: 'source',
  status: 'status',
  channel: 'channel',
  note: 'note',
  createdByAdminId: 'createdByAdminId',
  offsetMin: 'offsetMin',
  active: 'active',
  createdAt: 'createdAt',
  sentAt: 'sentAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.AdminOrderByRelevanceFieldEnum = {
  username: 'username',
  passwordHash: 'passwordHash'
};

exports.Prisma.StudentOrderByRelevanceFieldEnum = {
  nim: 'nim',
  noHp: 'noHp',
  nama: 'nama'
};

exports.Prisma.CourseOrderByRelevanceFieldEnum = {
  nama: 'nama'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.TutonItemOrderByRelevanceFieldEnum = {
  deskripsi: 'deskripsi'
};

exports.Prisma.ReminderOrderByRelevanceFieldEnum = {
  note: 'note'
};
exports.JenisTugas = exports.$Enums.JenisTugas = {
  DISKUSI: 'DISKUSI',
  ABSEN: 'ABSEN',
  TUGAS: 'TUGAS',
  QUIZ: 'QUIZ'
};

exports.StatusTugas = exports.$Enums.StatusTugas = {
  BELUM: 'BELUM',
  SELESAI: 'SELESAI'
};

exports.AdminRole = exports.$Enums.AdminRole = {
  OWNER: 'OWNER',
  ADMIN: 'ADMIN'
};

exports.ReminderSource = exports.$Enums.ReminderSource = {
  ADMIN: 'ADMIN',
  WEB: 'WEB'
};

exports.ReminderStatus = exports.$Enums.ReminderStatus = {
  PENDING: 'PENDING',
  SENT: 'SENT',
  CANCELLED: 'CANCELLED'
};

exports.ReminderChannel = exports.$Enums.ReminderChannel = {
  WA: 'WA'
};

exports.Prisma.ModelName = {
  Admin: 'Admin',
  Student: 'Student',
  Course: 'Course',
  SessionWindow: 'SessionWindow',
  Enrollment: 'Enrollment',
  TutonItem: 'TutonItem',
  Reminder: 'Reminder'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/carakawijaya/Desktop/UT CODING/TutonTrack/server/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/carakawijaya/Desktop/UT CODING/TutonTrack/server/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n/**\n * ================= Enums =================\n */\n\nenum JenisTugas {\n  DISKUSI\n  ABSEN\n  TUGAS\n  QUIZ\n}\n\nenum StatusTugas {\n  BELUM\n  SELESAI\n}\n\nenum AdminRole {\n  OWNER\n  ADMIN\n}\n\nenum ReminderSource {\n  ADMIN\n  WEB\n}\n\nenum ReminderStatus {\n  PENDING\n  SENT\n  CANCELLED\n}\n\nenum ReminderChannel {\n  WA\n}\n\n/**\n * =============== Admin ===============\n */\n\nmodel Admin {\n  id           Int       @id @default(autoincrement())\n  username     String    @unique @db.VarChar(50)\n  passwordHash String    @db.VarChar(255)\n  role         AdminRole @default(ADMIN)\n  isActive     Boolean   @default(true)\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  reminders Reminder[]\n\n  @@index([role])\n  @@index([isActive])\n}\n\n/**\n * =============== Core ===============\n */\n\nmodel Student {\n  id          Int          @id @default(autoincrement())\n  nim         String       @unique @db.VarChar(30)\n  noHp        String       @unique @db.VarChar(20)\n  nama        String       @db.VarChar(100)\n  enrollments Enrollment[]\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n\n  @@index([nama])\n}\n\nmodel Course {\n  id          Int          @id @default(autoincrement())\n  nama        String       @unique @db.VarChar(120)\n  enrollments Enrollment[]\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n\n  @@index([nama])\n}\n\n/**\n * ===== Master jendela global per (sesi, jenis) =====\n */\n\nmodel SessionWindow {\n  id        Int        @id @default(autoincrement())\n  sesi      Int\n  jenis     JenisTugas\n  startAt   DateTime\n  endAt     DateTime\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n\n  @@unique([sesi, jenis])\n  @@index([sesi])\n  @@index([jenis])\n  @@index([startAt])\n  @@index([endAt])\n}\n\nmodel Enrollment {\n  id        Int         @id @default(autoincrement())\n  studentId Int\n  courseId  Int\n  items     TutonItem[]\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n\n  student Student @relation(fields: [studentId], references: [id], onDelete: Cascade)\n  course  Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)\n\n  @@unique([studentId, courseId])\n  @@index([studentId])\n  @@index([courseId])\n}\n\nmodel TutonItem {\n  id           Int         @id @default(autoincrement())\n  enrollmentId Int\n  jenis        JenisTugas\n  sesi         Int\n  status       StatusTugas @default(BELUM)\n  nilai        Float?\n  deskripsi    String?     @db.VarChar(255)\n\n  openAt     DateTime?\n  deadlineAt DateTime?\n  selesaiAt  DateTime?\n\n  reminders Reminder[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  enrollment Enrollment @relation(fields: [enrollmentId], references: [id], onDelete: Cascade)\n\n  @@unique([enrollmentId, jenis, sesi])\n  @@index([enrollmentId])\n  @@index([openAt])\n  @@index([deadlineAt])\n  @@index([jenis, sesi])\n}\n\nmodel Reminder {\n  id               Int             @id @default(autoincrement())\n  itemId           Int\n  source           ReminderSource  @default(WEB)\n  status           ReminderStatus  @default(PENDING)\n  channel          ReminderChannel @default(WA)\n  note             String?         @db.VarChar(255)\n  createdByAdminId Int?\n  offsetMin        Int             @default(1440)\n  active           Boolean         @default(true)\n  createdAt        DateTime        @default(now())\n  sentAt           DateTime?\n\n  item  TutonItem @relation(fields: [itemId], references: [id], onDelete: Cascade)\n  admin Admin?    @relation(fields: [createdByAdminId], references: [id], onDelete: SetNull)\n\n  @@index([itemId])\n  @@index([status])\n  @@index([createdByAdminId])\n}\n",
  "inlineSchemaHash": "256a904d24243c60d4f993d8c283fc29c2bf00a77ef3550738cb2630a6438ce2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"AdminRole\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reminders\",\"kind\":\"object\",\"type\":\"Reminder\",\"relationName\":\"AdminToReminder\"}],\"dbName\":null},\"Student\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nim\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"noHp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nama\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enrollments\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"EnrollmentToStudent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nama\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enrollments\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"CourseToEnrollment\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SessionWindow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sesi\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jenis\",\"kind\":\"enum\",\"type\":\"JenisTugas\"},{\"name\":\"startAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Enrollment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"TutonItem\",\"relationName\":\"EnrollmentToTutonItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"Student\",\"relationName\":\"EnrollmentToStudent\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToEnrollment\"}],\"dbName\":null},\"TutonItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enrollmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jenis\",\"kind\":\"enum\",\"type\":\"JenisTugas\"},{\"name\":\"sesi\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"StatusTugas\"},{\"name\":\"nilai\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deskripsi\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deadlineAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"selesaiAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reminders\",\"kind\":\"object\",\"type\":\"Reminder\",\"relationName\":\"ReminderToTutonItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"enrollment\",\"kind\":\"object\",\"type\":\"Enrollment\",\"relationName\":\"EnrollmentToTutonItem\"}],\"dbName\":null},\"Reminder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"itemId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"ReminderSource\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReminderStatus\"},{\"name\":\"channel\",\"kind\":\"enum\",\"type\":\"ReminderChannel\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdByAdminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"offsetMin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"TutonItem\",\"relationName\":\"ReminderToTutonItem\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"Admin\",\"relationName\":\"AdminToReminder\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

